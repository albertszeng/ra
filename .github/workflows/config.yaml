name: Online Ra

on:
  push:
    branches:
      - master

jobs:
  # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - '*.py'
              - 'game/**'
            frontend:
              - 'frontend/**'
  deploy-server:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
      
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev
      
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          pipenv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings.
          pipenv run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics

      - name: Run type checking
        run: |
          pipenv run pyre check

      - name: Run unit tests.
        run: |
          pipenv run python -m unittest

  deploy-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    name: Deploy Front-end to gh-pages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3
      - name: Install 🔧 & Build 🏗️
        env:
          RA_APP_BACKEND: 'http://127.0.0.1:5000'
        run: |
          npm install
          npm run build
      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          folder: ./frontend/build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
